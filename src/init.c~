#include <stdio.h>
#include "struct.h"

struct board init_board_1(){
  //Board initialisation 4 positions, Tags and neighbours attribution
  struct board b={.num_positions=4,\
		  .num_neighbours=2,\
		  .neighbours={{1,3},{0,2},{1,3},{0,2}},\
		  .positions={{1}, {4}, {2}, {3}}};
  return b;
}

struct board init_board_2(){
  /*Board initialisation 16 positions "graphe planaire 5-régulier de diamètre 3", Tags and neighbours attribution
    Each position have 5 neighbours*/

  struct board b={.num_positions=16,\
		  .num_neighbours=5,\
		  .neighbours={{1,3,4,7,8},{0,2,4,5,9},{1,3,5,6,10},\
			       {0,2,6,7,11},{0,1,8,9,12},{1,2,9,10,13},\
			       {2,3,10,11,14},{0,3,8,11,15},{0,4,7,12,15},\
			       {1,4,5,12,13},{2,5,6,13,14},{3,6,7,14,15},\
			       {4,8,9,13,15},{5,9,10,12,14},{6,10,11,13,15},\
			       {7,8,11,12,14}}};  
  return b;
}

struct affect init_affect(struct board *b,int num_pelican) {
  /*Random affectation initialisation on the board
   */
  struct affect a;
  int i;
  int j;
  for(i=0; i<(*b).num_positions; i++){
    printf("%d \n", i);
    int tmp=rand_c(4);    
    for(j=0; j<i ; j++){
      if(tmp==a.pelicans[j]){
	tmp=rand_c(4);
	printf("DOUBLON \n");
      } else {
	printf("ECRITURE %d \n", i);
	a.pelicans[i]=tmp;	//Encore un bug : il reste un doublon...
      }
    }
  }
  return a;
}
